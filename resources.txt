1. spaCy and PyTorch with transformers like BERT, XLNet, GPT-2
https://explosion.ai/blog/spacy-pytorch-transformers

2. NLP frameworks
https://www.analyticsvidhya.com/blog/2019/08/complete-list-important-frameworks-nlp/

3. ML notes of Andrew Ng's course
http://www.holehouse.org/mlclass/

4. course.spacy.io

PyTorch
https://medium.com/biaslyai/learn-pytorch-basics-6d433f186b7a
https://medium.com/biaslyai/pytorch-linear-and-logistic-regression-models-5c5f0da2cb9
https://medium.com/biaslyai/pytorch-introduction-to-neural-network-feedforward-neural-network-model-e7231cff47cb
https://medium.com/dair-ai/a-simple-neural-network-from-scratch-with-pytorch-and-google-colab-c7f3830618e0
https://programmer.help/blogs/basic-knowledge-points-of-pytorch.html - unsqueeze
What happens when we do not zero out the gradient? https://medium.com/@zhang_yang/how-pytorch-tensors-backward-accumulates-gradient-8d1bf675579b
https://blog.exxactcorp.com/getting-started-with-natural-language-processing-using-pytorch/

https://github.com/joosthub/PyTorchNLPBook/ - check again later

Neural Networks and Deep Learning
https://www.analyticsvidhya.com/blog/2017/10/fundamentals-deep-learning-activation-functions-when-to-use-them/
https://medium.com/fintechexplained/neural-networks-activation-function-to-back-propagation-understanding-neural-networks-bdd036c3f29f
Activation Functions - https://medium.com/the-theory-of-everything/understanding-activation-functions-in-neural-networks-9491262884e0
Activation Functions - https://ml-cheatsheet.readthedocs.io/en/latest/activation_functions.html
Activation Functions - https://missinglink.ai/guides/neural-network-concepts/7-types-neural-network-activation-functions-right/
https://medium.com/@keonyonglee/bread-and-butter-from-deep-learning-by-andrew-ng-course-1-neural-networks-and-deep-learning-41563b8fc5d8

Sentiment Analysis using PyTorch
https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/A%20-%20Using%20TorchText%20with%20Your%20Own%20Datasets.ipynb
https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/1%20-%20Simple%20Sentiment%20Analysis.ipynb

ML Concepts
https://medium.com/fintechexplained/what-are-eigenvalues-and-eigenvectors-a-must-know-concept-for-machine-learning-80d0fd330e47
https://medium.com/fintechexplained/what-is-dimension-reduction-in-data-science-2aa5547f4d29
Eigen Values and Vectors - Basic Concept - https://www.visiondummy.com/2014/03/eigenvalues-eigenvectors/

Deep Learning Concepts
https://medium.com/socialbakers-engineering/sentiment-analysis-at-socialbakers-ca10f567eed9
https://medium.com/@yingbiao/ner-with-bert-in-action-936ff275bc73
Gradient - http://wiki.fast.ai/index.php/Calculus_for_Deep_Learning
http://www.holehouse.org/mlclass/

NLP
https://opendatascience.com/an-idiots-guide-to-word2vec-natural-language-processing/
https://towardsdatascience.com/implementing-word2vec-in-pytorch-skip-gram-model-e6bae040d2fb
https://stackoverflow.com/questions/51030782/why-do-we-pack-the-sequences-in-pytorch
https://realpython.com/natural-language-processing-spacy-python/
Transformers using pre-trained models - https://github.com/huggingface/pytorch-transformers
TODO: https://machinelearningmastery.com/prepare-text-data-machine-learning-scikit-learn/
Multilingual embeddings - https://ai.facebook.com/blog/under-the-hood-multilingual-embeddings/
Word embeddings - https://ai.facebook.com/blog/-a-new-model-for-word-embeddings-that-are-resilient-to-misspellings-/
Word embeddings - https://towardsdatascience.com/why-do-we-use-embeddings-in-nlp-2f20e1b632d2
Collocations tool - https://ws-dl.blogspot.com/2019/09/2019-09-09-introducing-sumgram-tool-for.html

LSTM
https://colah.github.io/posts/2015-08-Understanding-LSTMs/
https://github.com/bentrevett/pytorch-sentiment-analysis/blob/master/2%20-%20Upgraded%20Sentiment%20Analysis.ipynb

spaCy and PyTorch with transformers like BERT, XLNet, GPT-2
https://explosion.ai/blog/spacy-pytorch-transformers

NLP frameworks
https://www.analyticsvidhya.com/blog/2019/08/complete-list-important-frameworks$

course.spacy.io
https://realpython.com/natural-language-processing-spacy-python/

